package com.neo.study;import java.util.concurrent.CompletableFuture;import java.util.concurrent.CompletionStage;import java.util.concurrent.ExecutionException;/** * Created by cainiao on 2020-08-30 17:53 * CompletableFuture 异步编排测试类 * */public class CompletableFutureFourTest extends CompletableFutureBase{    public static void main(String[] args) throws Exception{        System.out.println("main.....start");        System.out.println(supplyAsync());        System.out.println("main.....end");    }    private static String supplyAsync() throws ExecutionException, InterruptedException {        CompletableFuture<String> future = CompletableFuture.supplyAsync(() -> {            System.out.println("当前线程id " + Thread.currentThread().getId());            String name = "RYU1";            return name;        }, executorStatic).thenApplyAsync((t)->{            if (t != null){                if (t.equalsIgnoreCase("RYU")){                    return "江波亮";                }            }            return "不是江波亮";        },executorStatic);        String s = future.get();        return s;    }}