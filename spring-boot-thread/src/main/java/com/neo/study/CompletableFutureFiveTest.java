package com.neo.study;import java.util.concurrent.CompletableFuture;/** * Created by cainiao on 2020-08-30 17:53 * CompletableFuture 异步编排测试类 * */public class CompletableFutureFiveTest extends CompletableFutureBase{    public static void main(String[] args) throws Exception{        System.out.println("main.....start");        CompletableFuture<String> futureOne = CompletableFuture.supplyAsync(() -> {            System.out.println("return \"futureONE\";");            return "futureONE";        }, executorStatic);        CompletableFuture<String> futureTwo = CompletableFuture.supplyAsync(() -> {            System.out.println("return \"futureTWO\";");            return "futureTWO";        }, executorStatic);        //无返回值，获取结果        /*futureOne.thenAcceptBothAsync(futureTwo,(f1,f2)->{            System.out.println("futureThree thenAcceptBothAsync");        },executorStatic);*/        //无返回值，不获取结果        /*futureOne.runAfterBothAsync(futureTwo,()->{            System.out.println("futureThree runAfterBothAsync");        },executorStatic);*/        //有返回值，获取结果        CompletableFuture<String> future = futureOne.thenCombineAsync(futureTwo, (f1, f2) -> {            System.out.println(f1 + f2);            return "ggg";        }, executorStatic);        //无返回值，获取结果        System.out.println("main.....end"+future.get());    }}