package com.neo.batch.builder;import org.springframework.batch.core.Job;import org.springframework.batch.core.JobParameters;import org.springframework.batch.core.JobParametersBuilder;import org.springframework.batch.core.Step;import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Qualifier;import org.springframework.context.annotation.Configuration;import javax.annotation.PostConstruct;import java.util.Date;/** * Created by cainiao on 2020-10-18 19:40 */@Configuration@EnableBatchProcessingpublic class PersonLifeJobBuilder extends AbstractJob{    @Autowired    @Qualifier("personEatStepBean")    private Step personEatStep;    @Autowired    @Qualifier("playGameStepBean")    private Step playGameStep;    @Autowired    @Qualifier("studyStepBean")    private Step studyStep;    @PostConstruct    @Override    public void init() {        jobHome.registry("personLifeJob",this);    }    @Override    public Job getJob() {        return jobBuilderFactory.get("personLifeJob")                .start(personEatStep)                .next(studyStep)                .next(playGameStep)                .build();    }    @Override    public JobParameters getJobParameters() {        JobParameters fanbin = new JobParametersBuilder()                .addString("personLife", "personLife")                .addDate("executeTime", new Date()).toJobParameters();        return fanbin;    }}