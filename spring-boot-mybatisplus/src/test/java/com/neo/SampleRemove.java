package com.neo;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;import com.neo.generator.student.entity.Student;import com.neo.generator.student.service.impl.StudentServiceImpl;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.test.context.junit4.SpringRunner;import java.util.*;/** * Created by cainiao on 2021/1/7 10:46 下午 * * * // 根据 entity 条件，删除记录 * boolean remove(Wrapper<T> queryWrapper); * // 根据 ID 删除 * boolean removeById(Serializable id); * // 根据 columnMap 条件，删除记录 * boolean removeByMap(Map<String, Object> columnMap); * // 删除（根据ID 批量删除） * boolean removeByIds(Collection<? extends Serializable> idList); */@SpringBootTest@RunWith(SpringRunner.class)public class SampleRemove {    @Autowired    private StudentServiceImpl studentService;    @Test    public void saveBatch(){        List<Student> students = createBatchStudent("小三", 10);        System.out.println(studentService.saveBatch(students));    }    // 根据 entity 条件，删除记录    @Test    public void remove(){        QueryWrapper<Student> queryWrapper = new QueryWrapper<>();        queryWrapper.eq("age",0);        boolean remove = studentService.remove(queryWrapper);        System.out.println(remove);    }    // 根据 ID 删除    @Test    public void removeById(){        boolean remove = studentService.removeById(22);        System.out.println(remove);    }    // 根据 columnMap 条件，删除记录    @Test    public void removeByMap(){        Map<String, Object> map = new HashMap<>();        map.put("name","小三_51");        map.put("age","5");        boolean remove = studentService.removeByMap(map);        System.out.println(remove);    }    // 删除（根据ID 批量删除）    @Test    public void remov1eByMap(){        ArrayList<Long> asList = new ArrayList<Long>() {{            add(25l);            add(26l);            add(27l);            add(28l);        }};        boolean remove = studentService.removeByIds(asList);        System.out.println(remove);    }    @Test    public void saveOrUpdateBatch(){        List<Student> list = new ArrayList<>();        Student student = new Student();        student.setId(22l);        student.setName("张三新222");        Student student1 = new Student();        student1.setId(23l);        student1.setName("张三新333");        list.add(student);        list.add(student1);        System.out.println(studentService.saveOrUpdateBatch(list));    }    public List<Student> createBatchStudent(String studentName,int insertCount){        List<Student> list = new ArrayList<>();        for (int i=0;i<insertCount;i++){            Student student = new Student();            student.setName(studentName+"_"+i);            student.setAge(String.valueOf(i));            list.add(student);        }        return list;    }}