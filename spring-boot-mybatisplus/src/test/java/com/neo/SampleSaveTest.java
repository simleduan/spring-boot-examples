package com.neo;import com.neo.entity.User;import com.neo.generator.person.entity.Person;import com.neo.generator.person.service.impl.PersonServiceImpl;import com.neo.mapper.UserMapper;import org.junit.Assert;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.test.context.junit4.SpringRunner;import java.util.ArrayList;import java.util.List;/** * Created by cainiao on 2021/1/7 10:46 下午 * * // 插入一条记录（选择字段，策略插入） * boolean save(T entity); * // 插入（批量） * boolean saveBatch(Collection<T> entityList); * // 插入（批量） * boolean saveBatch(Collection<T> entityList, int batchSize); */@SpringBootTest@RunWith(SpringRunner.class)public class SampleSaveTest {    @Autowired    private UserMapper userMapper;    @Autowired    private PersonServiceImpl personService;    @Test    public void testSelect() {        System.out.println(("----- selectAll method test ------"));        List<User> userList = userMapper.selectList(null);        Assert.assertEquals(6, userList.size());        userList.forEach(System.out::println);    }    @Test    public void save(){        Person person = new Person();        person.setSelf("李四");        person.setBrother("李四哥哥");        person.setFather("李四父亲");        person.setMother("李四母亲");        person.setFriend("李四朋友");        person.setWife("李四媳妇");        boolean save = personService.save(person);        System.out.println(save);    }    @Test    public void saveBatch(){        List<Person> personList = createBatchPerson("赵六", 3);        System.out.println(personService.saveBatch(personList,2));    }    public List<Person> createBatchPerson(String personName,int insertCount){        List<Person> list = new ArrayList<>();        for (int i=0;i<insertCount;i++){            Person person = new Person();            person.setSelf(personName+"__"+i);            person.setBrother(personName+"__哥哥__"+i);            person.setFather(personName+"__父亲__"+i);            person.setMother(personName+"__母亲__"+i);            person.setFriend(personName+"__朋友__"+i);            person.setWife(personName+"__媳妇__"+i);            list.add(person);        }        return list;    }}